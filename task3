
#IMPORTING THE LIBRARIES
import pandas as pd
import matplotlib.pyplot as plt
#LOADING THE DATASET
data = pd.read_csv(r'"C:\Users\Lovishka\OneDrive\Desktop\tips.csv"')
#ANALYSING THE SAMPLE DATA
data.head(10)
total_bill	tip	sex	smoker	day	time	size
0	16.99	1.01	Female	No	Sun	Dinner	2
1	10.34	1.66	Male	No	Sun	Dinner	3
2	21.01	3.50	Male	No	Sun	Dinner	3
3	23.68	3.31	Male	No	Sun	Dinner	2
4	24.59	3.61	Female	No	Sun	Dinner	4
5	25.29	4.71	Male	No	Sun	Dinner	4
6	8.77	2.00	Male	No	Sun	Dinner	2
7	26.88	3.12	Male	No	Sun	Dinner	4
8	15.04	1.96	Male	No	Sun	Dinner	2
9	14.78	3.23	Male	No	Sun	Dinner	2
#KNOWING THE DATA
data.info()
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 244 entries, 0 to 243
Data columns (total 7 columns):
 #   Column      Non-Null Count  Dtype  
---  ------      --------------  -----  
 0   total_bill  244 non-null    float64
 1   tip         244 non-null    float64
 2   sex         244 non-null    object 
 3   smoker      244 non-null    object 
 4   day         244 non-null    object 
 5   time        244 non-null    object 
 6   size        244 non-null    int64  
dtypes: float64(2), int64(1), object(4)
memory usage: 13.5+ KB
#STATISTICS OF THE DATA
data.describe()
total_bill	tip	size
count	244.000000	244.000000	244.000000
mean	19.785943	2.998279	2.569672
std	8.902412	1.383638	0.951100
min	3.070000	1.000000	1.000000
25%	13.347500	2.000000	2.000000
50%	17.795000	2.900000	2.000000
75%	24.127500	3.562500	3.000000
max	50.810000	10.000000	6.000000
#BAR CHART TO SHOW HOW MUCH TIP IS GIVEN ON DAYS
plt.figure(figsize=(3,3))
plt.bar(data['day'], data['tip'],label='$',color='#b3a6c4', edgecolor='black')
plt.title('Amount of tips vs Days', fontsize= 12, fontname='cursive', fontweight='bold',color='#283747')
plt.xlabel('Days', fontsize= 10, fontname='cursive', fontweight='bold',color='#283747')
plt.ylabel('Tip', fontsize= 10, fontname='cursive', fontweight='bold',color='#283747')
plt.legend()
plt.show()

#PIE CHART TO SHOW MALE TO FEMALE PERCENTAGE OF CUSTOMERS
plt.figure(figsize=(4,3))
plt.pie(data['sex'].value_counts(), labels=data['sex'].value_counts().index, autopct='%.2f%%', colors=['rosybrown','gray'])
plt.title('Male to Female percentage of customers', fontsize= 10, fontname='cursive', fontweight='bold', color='#283747')
plt.show()

#SCATTERPLOT TO SHOW THE HOW MUCH TIP IS RECIEVED WHEN THE SIZE OF THE GROUP OF CUSTOMER VARIES
plt.figure(figsize=(3,3))
plt.scatter(data['size'], data.tip, label='Amt',c=data['tip'], cmap='viridis', s=100, alpha=0.5)
plt.title('Size of the group vs Tip amount',fontsize= 16, fontname='cursive', fontweight='bold', color='#283747')
plt.xlabel('No.of customers in the group', fontsize= 10, fontname= 'cursive', color='#283747')
plt.ylabel('Tip amount', fontsize= 10, fontname= 'cursive', color='#283747')
plt.colorbar()
plt.show()

#BAR CHART TO SHOW HOW MUCH BILL IS MADE DURING LUNCH AND DINNER TIMES
plt.figure(figsize=(3,3))
plt.bar(data['time'], data.total_bill, label='Total Bill', color=['#34495E'], hatch='/')
plt.title('Bill made during Lunch & Dinner times', fontsize= 13, fontname='cursive', fontweight='bold',color= '#264348')
plt.ylabel('Total bill in dollars ($)', fontsize= 10, fontname= 'cursive', color='#283747')
plt.xlabel('Time of the day', fontsize= 10, fontname= 'cursive', color='#283747')
plt.legend()
plt.show()

#SCATTERPLOT WITH THE LINE PLOT TO SHOW THE RELATIONSHIP BETWEEN TOTAL BILL AND TIP AMOUNT
plt.figure(figsize=(3,3))
plt.scatter(data['tip'], data['total_bill'], s=100, alpha=0.5, marker='')
plt.title('Total bill and the tip amount',fontsize= 16, fontname='cursive', fontweight='bold', color='#665d1e')
plt.xlabel('Tip amount', fontsize= 10, fontname= 'cursive', color='#665d1e')
plt.ylabel('Total bill', fontsize= 10, fontname= 'cursive', color='#665d1e')
#Sort data by 'tip' for line plot
sorted_data = data.sort_values('tip')
# Add line plot
plt.plot(sorted_data['tip'], sorted_data['total_bill'],color='#707B7C')
plt.show()

#LINE CHART TO SHOW THE STATISTICS OF THE TOTAL BILL
plt.figure(figsize=(5, 5), facecolor='#34495E')  
line,=plt.plot((data['total_bill'].describe()), marker='^',linewidth=2, markersize=2,markerfacecolor='#34495E', markeredgewidth=2, markeredgecolor='#34495E', label='total bill')
plt.ylabel('Values in dollars ($)', fontsize= 10, fontname= 'cursive', color='#CCD1D1')
plt.xlabel('Statistics of the total bill.'  , fontsize= 10, fontname= 'cursive', color='#CCD1D1')
for x, y in zip(line.get_xdata(), line.get_ydata()):
    #annotate to add annotation of each point and f{y:.2f} formats the value to nearest integer
    plt.annotate(f'{y:.0f}', (x, y), textcoords="offset points", xytext=(0,3), ha='left', color='#34495E')
    #specifies the values should be placed ten points above the line and text alignment should be left
plt.legend() 
plt.show()

#HISTOGRAM TO SHOW THE DISTRIBUTION OF THE TOTAL BILL
plt.figure(figsize=(3,3))
plt.hist(data['total_bill'], bins=10, color='#34495E', edgecolor='black')
plt.title('Distribution of the total bill', fontsize= 12, fontname='cursive', fontweight='bold',color='#283747')
plt.xlabel('Total bill in dollars ($)', fontsize= 10, fontname='cursive', fontweight='bold',color='#283747')
plt.ylabel('Frequency of the bill', fontsize= 10, fontname='cursive', fontweight='bold',color='#283747')
plt.show()
